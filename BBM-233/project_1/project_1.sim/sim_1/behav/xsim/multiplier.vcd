$date
   Sun Dec 10 00:09:59 2023
$end

$version
  2023.2
  $dumpfile ("multiplier.vcd") 
$end

$timescale
  1ps
$end

$scope module multiplier_tb $end
$var reg 3 ! A [2:0] $end
$var reg 3 " B [2:0] $end
$var wire 6 # P [5:0] $end
$scope module UUT $end
$var wire 3 $ A [2:0] $end
$var wire 3 % B [2:0] $end
$var wire 6 # P [5:0] $end
$var wire 3 & w1 [2:0] $end
$var wire 3 ' w2 [2:0] $end
$var wire 3 ( w3 [2:0] $end
$var wire 1 ) w6 $end
$var wire 1 * w7 $end
$var wire 1 + w8 $end
$var wire 1 , w12 $end
$var wire 1 - w13 $end
$var wire 1 . w14 $end
$var wire 1 / w15 $end
$scope module M1_haM $end
$var wire 1 0 A $end
$var wire 1 1 B $end
$var wire 1 2 S $end
$var wire 1 ) C $end
$upscope $end
$scope module M2_haM $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 * S $end
$var wire 1 + C $end
$upscope $end
$scope module M3_faM $end
$var wire 1 5 A $end
$var wire 1 * B $end
$var wire 1 ) Cin $end
$var wire 1 2 S $end
$var wire 1 , Cout $end
$var wire 1 6 w1 $end
$var wire 1 7 w2 $end
$var wire 1 8 w3 $end
$scope module haM1 $end
$var wire 1 5 A $end
$var wire 1 * B $end
$var wire 1 6 S $end
$var wire 1 7 C $end
$upscope $end
$scope module haM2 $end
$var wire 1 6 A $end
$var wire 1 ) B $end
$var wire 1 9 S $end
$var wire 1 8 C $end
$upscope $end
$upscope $end
$scope module M4_faM $end
$var wire 1 : A $end
$var wire 1 ; B $end
$var wire 1 + Cin $end
$var wire 1 - S $end
$var wire 1 . Cout $end
$var wire 1 < w1 $end
$var wire 1 = w2 $end
$var wire 1 > w3 $end
$scope module haM1 $end
$var wire 1 : A $end
$var wire 1 ; B $end
$var wire 1 < S $end
$var wire 1 = C $end
$upscope $end
$scope module haM2 $end
$var wire 1 < A $end
$var wire 1 + B $end
$var wire 1 - S $end
$var wire 1 > C $end
$upscope $end
$upscope $end
$scope module M5_haM $end
$var wire 1 - A $end
$var wire 1 , B $end
$var wire 1 ? S $end
$var wire 1 / C $end
$upscope $end
$scope module M6_faM $end
$var wire 1 @ A $end
$var wire 1 . B $end
$var wire 1 / Cin $end
$var wire 1 A S $end
$var wire 1 B Cout $end
$var wire 1 C w1 $end
$var wire 1 D w2 $end
$var wire 1 E w3 $end
$scope module haM1 $end
$var wire 1 @ A $end
$var wire 1 . B $end
$var wire 1 C S $end
$var wire 1 D C $end
$upscope $end
$scope module haM2 $end
$var wire 1 C A $end
$var wire 1 / B $end
$var wire 1 A S $end
$var wire 1 E C $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
b0 !
b0 "
b0 #
b0 $
b0 %
b0 &
b0 '
b0 (
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
$end

#10000
b111 !
b10 "
b1110 #
b111 $
b10 %
b10 &
b10 '
b10 (
1*
1-
13
16
19
1:
1<
1?

#20000
b101 !
b1 "
b101 #
b101 $
b1 %
b1 &
b0 '
b1 (
0*
0,
0-
11
12
03
15
16
07
19
0:
0<
0?

#30000
b10 !
b11 "
b110 #
b10 $
b11 %
b0 &
b11 '
b0 (
1*
10
01
02
13
05

#40000
b100 !
b100 "
b10000 #
b100 $
b100 %
b0 '
b100 (
0*
00
03
06
09
1@
1A
1C

#50000
b10 !
b101 "
b1010 #
b10 $
b101 %
b101 '
b0 (
1-
10
1;
1<
1?
0@
0A
0C

#60000
b11 !
b100 "
b1100 #
b11 $
b100 %
b100 &
b100 '
1*
00
14
16
19

#70000
b100 !
b10000 #
b100 $
b0 &
b0 '
b100 (
0*
0-
04
06
09
0;
0<
0?
1@
1A
1C

#80000
b1 !
b1 "
b1 #
b1 $
b1 %
b1 &
b0 (
11
12
0@
0A
0C

#90000
b11 !
b110 "
b10010 #
b11 $
b110 %
b110 &
b110 '
1+
1.
01
02
13
14
1;
1<
1>
1A
1C

#100000
b111 !
b111 "
b110001 #
b111 $
b111 %
b111 &
b111 '
b111 (
1)
1,
1-
1/
10
11
12
15
16
18
1:
0<
1=
0>
1@
1A
1B
0C
1D
